// Keywords and basic tokens
keywords = { "if" | "then" | "else" | "true" | "false" | "Bool" | "fun" }
variable_name = @{ !keywords ~ ASCII_ALPHA+ }
WHITESPACE = _{ " " | "\t" | "\n" | "\r" }

// Types
typename = { arrow_type | base_type }
base_type = { "Bool" | "(" ~ typename ~ ")" }
arrow_type = { base_type ~ "->" ~ typename }

// Terms
term = { lambda | conditional | application_term }

// Lambda has lowest precedence
lambda = { "fun" ~ variable_name ~ "->" ~ term }

// Conditional
conditional = { "if" ~ term ~ "then" ~ term ~ "else" ~ term }

// Application has higher precedence than lambda
application_term = { atom ~ atom* }

// Atoms are the highest precedence terms
atom = {
    bool
    | variable_name
    | "(" ~ term ~ ")"
}

// Literals
bool = { "true" | "false" }

// Type annotations (not used in term, but you might want them elsewhere)
declaration = { variable_name ~ ":" ~ typename }
